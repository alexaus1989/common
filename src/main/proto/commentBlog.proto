syntax = "proto3";

option java_package = "traffus.blog.traffus_blog";
option java_multiple_files = true;


//import "google/protobuf/empty.proto";
//import "google/protobuf/timestamp.proto";
import "enumses.proto";
import "result.proto";

package commentBlog;

service BlogCommentService {
  rpc GetCommentsByPost (GetBlogCommentsByPostRequest) returns (BlogCommentListResponse);
  rpc GetCommentsByUser (GetBlogCommentsByUserRequest) returns (BlogCommentListResponse);
  rpc CreateBlogComment (CreateBlogCommentRequest) returns (BlogCommentResponse);
  rpc UpdateComment (UpdateBlogCommentRequest) returns (BlogCommentResponse);
  rpc DeleteComment (GetBlogCommentByUUIDRequest) returns (common.ResultResponse);

  ///VOTE
  rpc CreateVoteBlogComment (CreateVoteBlogCommentRequest) returns (common.ResultResponse);
}

// Запросы
message GetBlogCommentByUUIDRequest {
  string uuid = 1;
}

message GetBlogCommentsByPostRequest {
  string uuid = 1;
}

message GetBlogCommentsByUserRequest {
  string uuid = 1;
}

message CreateBlogCommentRequest {
  string user = 1;
  string post = 2;
  string replies = 3;

  string text = 5;
}

message CreateVoteBlogCommentRequest {
  string user = 1; // UUID пользователя, который поставил лайк/дизлайк
  string comment = 2; // UUID пользователя, который поставил лайк/дизлайк
  bool is_like = 5; // true = лайк, false = дизлайк
}

message UpdateBlogCommentRequest {
  string uuid = 1;

  string text = 5;
}


//////////////////////////////////////
// Ответы

message BlogCommentListResponse {
  repeated BlogCommentResponse comments = 1;
}

message BlogCommentResponse {
  string uuid = 1;
  string user = 2;
  string parent = 3; // UUID родительского комментария, если это ответ

  string text = 4;

  repeated CommentBlogVoteResponse votes = 7;

  repeated BlogCommentResponse replies = 13;

  int64  created = 10; // ISO string или timestamp как string
  int64  updated = 11; // ISO string или timestamp как string
  common.Status status = 12;
}

message CommentBlogVoteResponse {
  string uuid = 1;
  string user = 2; // UUID пользователя, который поставил лайк/дизлайк
  bool is_like = 6; // true = лайк, false = дизлайк
}
/*
ТАК нельзя ибо нет аватров gateway должен сам обогащать данными при ответе.
message CommentBlogUserResponse {
  string avatar = 1;
  string user = 2;
  string name = 3;
}*/